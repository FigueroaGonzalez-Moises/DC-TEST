{"version":3,"sources":["../node_modules/nanoid/index.browser.js","redux/actions/userAction.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","components/Products/Products1.tsx"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","addProductToCart","product","type","resetCart","changeQuantityOnProduct","newQuantity","productIndex","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Products1","document","documentElement","className","dispatch","useDispatch","useGetProductsWithOptionsAndImagesQuery","data","loading","useState","name","option_id","option_price","option_stock","option","setOption","DOM","useEffect","console","log","getProductsWithOptionsAndImages","elem","getElementById","product_id","innerHTML","desc","grid","querySelector","content","parentNode","gridItems","Array","from","querySelectorAll","items","forEach","item","index","push","Item","details","Details","e","t","createElement","head","appendChild","window","CSS","supports","removeChild","supportsCssVars","alert","isAnimating","this","init","bgUp","bgDown","img","title","subtitle","price","description","cart","close","button","addEventListener","classList","contains","add","setTimeout","remove","preventDefault","initEvents","info","src","productBgRect","productBg","getBoundingClientRect","detailsBgRect","productImgRect","productImg","detailsImgRect","style","opacity","rect","getProductDetailsRect","transform","left","top","width","height","anime","targets","duration","easing","elasticity","translateX","translateY","scaleX","scaleY","complete","delay","total","scale","el","open","fill","map","images","img_url","alt","Number","toFixed","options","stock","onClick","display","tmp","viewBox","points","xmlns","d"],"mappings":"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","file":"static/js/3.6c818617.chunk.js","sourcesContent":["// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { Product } from \"../RootReducer\";\r\n\r\nexport const addProductToCart = (product: Product) => {\r\n    return {\r\n        type: \"ADD_PRODUCT_TO_CART\",\r\n        product,\r\n    };\r\n};\r\n\r\nexport const resetCart = () => {\r\n    return { type: \"RESET_CART\" };\r\n};\r\n\r\nexport const changeQuantityOnProduct = (\r\n    newQuantity: number,\r\n    productIndex: number\r\n) => {\r\n    return { type: \"CHANGE_QUANTITY_ON_PRODUCT\", newQuantity, productIndex };\r\n};\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import \"css/pater.css\";\r\nimport \"css/base.scss\";\r\nimport anime from \"animejs\";\r\nimport ConchaMoon from \"images/ConchaMoon.webp\";\r\nimport { useGetProductsWithOptionsAndImagesQuery } from \"generated/graphql\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { addProductToCart } from \"redux/actions/userAction\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function Products1() {\r\n    document.documentElement.className = \"js\";\r\n    const dispatch = useDispatch();\r\n\r\n    const { data, loading } = useGetProductsWithOptionsAndImagesQuery();\r\n    const [option, setOption] = useState({\r\n        name: \"\",\r\n        option_id: 0,\r\n        option_price: 0,\r\n        option_stock: 0,\r\n    });\r\n    const DOM = {} as any;\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            if (!!data) {\r\n                console.log(`data`, data);\r\n                for (\r\n                    let i = 0;\r\n                    i < data.getProductsWithOptionsAndImages.length;\r\n                    i++\r\n                ) {\r\n                    let product = data.getProductsWithOptionsAndImages[i],\r\n                        elem = document.getElementById(\r\n                            `product-desc:${product.product_id}`\r\n                        );\r\n\r\n                    if (elem) {\r\n                        elem.innerHTML = product.desc;\r\n\r\n                        DOM.grid = document.querySelector(\".grid\");\r\n                        DOM.content = DOM.grid.parentNode;\r\n                        DOM.gridItems = Array.from(\r\n                            DOM.grid.querySelectorAll(\".grid__item\")\r\n                        );\r\n                        try {\r\n                            let items = [] as any;\r\n                            DOM.gridItems.forEach((item, index) => {\r\n                                items.push(new Item(item, index));\r\n                            });\r\n\r\n                            DOM.details = new Details(product.product_id);\r\n                        } catch (e) {\r\n                            console.log(`e`, e);\r\n                            console.log(\"failed\");\r\n                        }\r\n                    } else break;\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    if (loading || !data) {\r\n        return <></>;\r\n    }\r\n\r\n    var supportsCssVars = function () {\r\n        var e,\r\n            t = document.createElement(\"style\");\r\n        return (\r\n            (t.innerHTML = \"root: { --tmp-var: bold; }\"),\r\n            document.head.appendChild(t),\r\n            (e = !!(\r\n                window.CSS &&\r\n                window.CSS.supports &&\r\n                window.CSS.supports(\"font-weight\", \"var(--tmp-var)\")\r\n            )),\r\n            t.parentNode!.removeChild(t),\r\n            e\r\n        );\r\n    };\r\n    supportsCssVars() ||\r\n        alert(\r\n            \"Please view this demo in a modern browser that supports CSS Variables.\"\r\n        );\r\n\r\n    class Details {\r\n        DOM: any;\r\n        isAnimating: any;\r\n\r\n        constructor(product_id: number) {\r\n            this.DOM = {} as any;\r\n            this.isAnimating = false;\r\n\r\n            this.DOM.details = document.getElementById(`details:${product_id}`);\r\n            this.DOM.details.innerHTML = document.getElementById(\r\n                `details:${product_id}`\r\n            )!.innerHTML;\r\n\r\n            DOM.content.appendChild(this.DOM.details);\r\n            this.init();\r\n        }\r\n\r\n        init() {\r\n            this.DOM.bgUp = this.DOM.details.querySelector(\".details__bg--up\");\r\n            this.DOM.bgDown =\r\n                this.DOM.details.querySelector(\".details__bg--down\");\r\n            this.DOM.img = this.DOM.details.querySelector(\".details__img\");\r\n            this.DOM.title = this.DOM.details.querySelector(\".details__title\");\r\n            this.DOM.subtitle =\r\n                this.DOM.details.querySelector(\".details__subtitle\");\r\n            this.DOM.price = this.DOM.details.querySelector(\".details__price\");\r\n            this.DOM.description = this.DOM.details.querySelector(\r\n                \".details__description\"\r\n            );\r\n            this.DOM.cart = this.DOM.details.querySelector(\r\n                \".details__addtocart\"\r\n            );\r\n\r\n            this.DOM.close = this.DOM.details.querySelector(\".details__close\");\r\n\r\n            let button = document.getElementById(\"atc-button\")!;\r\n            button.addEventListener(\"click\", e => {\r\n                if (!button.classList.contains(\"loading\")) {\r\n                    button.classList.add(\"loading\");\r\n\r\n                    setTimeout(() => button.classList.remove(\"loading\"), 3700);\r\n                }\r\n                e.preventDefault();\r\n            });\r\n\r\n            this.initEvents();\r\n        }\r\n\r\n        initEvents() {\r\n            this.DOM.close.addEventListener(\"click\", () => this.close());\r\n        }\r\n        fill(info) {\r\n            this.DOM.img.src = info.img;\r\n            this.DOM.title.innerHTML = info.title;\r\n            this.DOM.subtitle.innerHTML = info.subtitle;\r\n            this.DOM.price.innerHTML = info.price;\r\n            this.DOM.description.innerHTML = info.description;\r\n        }\r\n\r\n        getProductDetailsRect() {\r\n            return {\r\n                productBgRect: this.DOM.productBg.getBoundingClientRect(),\r\n                detailsBgRect: this.DOM.bgDown.getBoundingClientRect(),\r\n                productImgRect: this.DOM.productImg.getBoundingClientRect(),\r\n                detailsImgRect: this.DOM.img.getBoundingClientRect(),\r\n            };\r\n        }\r\n\r\n        open(data) {\r\n            if (this.isAnimating) return false;\r\n            this.isAnimating = true;\r\n\r\n            this.DOM.details.classList.add(\"details--open\");\r\n\r\n            this.DOM.productBg = data.productBg;\r\n            this.DOM.productImg = data.productImg;\r\n\r\n            this.DOM.productBg.style.opacity = 0;\r\n            this.DOM.productImg.style.opacity = 0;\r\n\r\n            const rect = this.getProductDetailsRect();\r\n\r\n            this.DOM.bgDown.style.transform = `translateX(${\r\n                rect.productBgRect.left - rect.detailsBgRect.left\r\n            }px) translateY(${\r\n                rect.productBgRect.top - rect.detailsBgRect.top\r\n            }px) scaleX(${\r\n                rect.productBgRect.width / rect.detailsBgRect.width\r\n            }) scaleY(${\r\n                rect.productBgRect.height / rect.detailsBgRect.height\r\n            })`;\r\n            this.DOM.bgDown.style.opacity = 1;\r\n\r\n            this.DOM.img.style.transform = `translateX(${\r\n                rect.productImgRect.left - rect.detailsImgRect.left\r\n            }px) translateY(${\r\n                rect.productImgRect.top - rect.detailsImgRect.top\r\n            }px) scaleX(${\r\n                rect.productImgRect.width / rect.detailsImgRect.width\r\n            }) scaleY(${\r\n                rect.productImgRect.height / rect.detailsImgRect.height\r\n            })`;\r\n            this.DOM.img.style.opacity = 1;\r\n\r\n            anime({\r\n                targets: [this.DOM.bgDown, this.DOM.img],\r\n                duration: (target, index) => (index ? 800 : 250),\r\n                easing: \"easeOutSine\",\r\n                elasticity: 250,\r\n                translateX: 0,\r\n                translateY: 0,\r\n                scaleX: 1,\r\n                scaleY: 1,\r\n                complete: () => (this.isAnimating = false),\r\n            });\r\n\r\n            anime({\r\n                targets: [\r\n                    this.DOM.title,\r\n                    this.DOM.subtitle,\r\n                    this.DOM.price,\r\n                    this.DOM.description,\r\n                    this.DOM.cart,\r\n                ],\r\n                duration: 600,\r\n                easing: \"easeOutExpo\",\r\n                delay: (target, index) => {\r\n                    return index * 60;\r\n                },\r\n                translateY: (target, index, total) => {\r\n                    return index !== total - 1 ? [50, 0] : 0;\r\n                },\r\n                scale: (target, index, total) => {\r\n                    return index === total - 1 ? [0, 1] : 1;\r\n                },\r\n                opacity: 1,\r\n            });\r\n\r\n            anime({\r\n                targets: this.DOM.bgUp,\r\n                duration: 100,\r\n                easing: \"linear\",\r\n                opacity: 1,\r\n            });\r\n\r\n            anime({\r\n                targets: this.DOM.close,\r\n                duration: 250,\r\n                easing: \"easeOutSine\",\r\n                translateY: [\"100%\", 70],\r\n                opacity: 1,\r\n            });\r\n        }\r\n\r\n        close() {\r\n            if (this.isAnimating) return false;\r\n            this.isAnimating = true;\r\n\r\n            this.DOM.details.classList.remove(\"details--open\");\r\n\r\n            anime({\r\n                targets: this.DOM.close,\r\n                duration: 250,\r\n                easing: \"easeOutSine\",\r\n                translateY: \"100%\",\r\n                opacity: 0,\r\n            });\r\n\r\n            anime({\r\n                targets: this.DOM.bgUp,\r\n                duration: 100,\r\n                easing: \"linear\",\r\n                opacity: 0,\r\n            });\r\n\r\n            anime({\r\n                targets: [\r\n                    this.DOM.title,\r\n                    this.DOM.subtitle,\r\n                    this.DOM.price,\r\n                    this.DOM.description,\r\n                    this.DOM.cart,\r\n                ],\r\n                duration: 20,\r\n                easing: \"linear\",\r\n                opacity: 0,\r\n            });\r\n\r\n            const rect = this.getProductDetailsRect();\r\n            anime({\r\n                targets: [this.DOM.bgDown, this.DOM.img],\r\n                duration: 250,\r\n                easing: \"easeOutSine\",\r\n                translateX: (target, index) => {\r\n                    return index\r\n                        ? rect.productImgRect.left - rect.detailsImgRect.left\r\n                        : rect.productBgRect.left - rect.detailsBgRect.left;\r\n                },\r\n                translateY: (target, index) => {\r\n                    return index\r\n                        ? rect.productImgRect.top - rect.detailsImgRect.top\r\n                        : rect.productBgRect.top - rect.detailsBgRect.top;\r\n                },\r\n                scaleX: (target, index) => {\r\n                    return index\r\n                        ? rect.productImgRect.width / rect.detailsImgRect.width\r\n                        : rect.productBgRect.width / rect.detailsBgRect.width;\r\n                },\r\n                scaleY: (target, index) => {\r\n                    return index\r\n                        ? rect.productImgRect.height /\r\n                              rect.detailsImgRect.height\r\n                        : rect.productBgRect.height / rect.detailsBgRect.height;\r\n                },\r\n                complete: () => {\r\n                    this.DOM.bgDown.style.opacity = 0;\r\n                    this.DOM.img.style.opacity = 0;\r\n                    this.DOM.bgDown.style.transform = \"none\";\r\n                    this.DOM.img.style.transform = \"none\";\r\n                    this.DOM.productBg.style.opacity = 1;\r\n                    this.DOM.productImg.style.opacity = 1;\r\n                    this.isAnimating = false;\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    class Item {\r\n        DOM: any;\r\n        info: any;\r\n\r\n        constructor(el: any, index?: number) {\r\n            this.DOM = {} as any;\r\n            this.DOM.el = el;\r\n            this.DOM.product = this.DOM.el.querySelector(\".product\");\r\n            this.DOM.productBg = this.DOM.product.querySelector(\".product__bg\");\r\n            this.DOM.productImg =\r\n                this.DOM.product.querySelector(\".product__img\");\r\n\r\n            this.info = {\r\n                img: this.DOM.productImg.src,\r\n                title: this.DOM.product.querySelector(\".product__title\")\r\n                    .innerHTML,\r\n                subtitle:\r\n                    this.DOM.product.querySelector(\".product__subtitle\")\r\n                        .innerHTML,\r\n                description: this.DOM.product.querySelector(\r\n                    \".product__description\"\r\n                ).innerHTML,\r\n                price: this.DOM.product.querySelector(\".product__price\")\r\n                    .innerHTML,\r\n            };\r\n\r\n            this.initEvents();\r\n        }\r\n\r\n        initEvents() {\r\n            this.DOM.product.addEventListener(\"click\", () => this.open());\r\n        }\r\n\r\n        open() {\r\n            DOM.details.fill(this.info);\r\n            DOM.details.open({\r\n                productBg: this.DOM.productBg,\r\n                productImg: this.DOM.productImg,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <main>\r\n                <div className='content'>\r\n                    <div className='grid'>\r\n                        {data.getProductsWithOptionsAndImages.map(\r\n                            (product, i) => {\r\n                                return (\r\n                                    <div className='grid__item' key={nanoid()}>\r\n                                        <div className='product'>\r\n                                            <div className='product__bg'>\r\n                                                <img\r\n                                                    className='product__img'\r\n                                                    src={\r\n                                                        product.images![0]\r\n                                                            .img_url\r\n                                                    }\r\n                                                    alt='product_image'\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <h2 className='product__title'>\r\n                                                {product.name}\r\n                                            </h2>\r\n                                            <h3 className='product__subtitle'>\r\n                                                $\r\n                                                {Number(\r\n                                                    product.price / 100\r\n                                                ).toFixed(2)}\r\n                                            </h3>\r\n                                            <p\r\n                                                id={`product-desc:${product.product_id}`}\r\n                                                className='product__description'\r\n                                            ></p>\r\n                                            <div className='product__price'>\r\n                                                $\r\n                                                {Number(\r\n                                                    product.price / 100\r\n                                                ).toFixed(2)}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                        )}\r\n                    </div>\r\n\r\n                    {data.getProductsWithOptionsAndImages.map((product, i) => {\r\n                        console.log(\"product.options :>> \", product.options);\r\n                        return (\r\n                            <div\r\n                                className='details'\r\n                                id={`details:${product.product_id}`}\r\n                                key={nanoid()}\r\n                            >\r\n                                <div className='details__bg details__bg--up'></div>\r\n                                <div className='details__bg details__bg--down'></div>\r\n                                <img\r\n                                    className='details__img'\r\n                                    src=''\r\n                                    alt='img 01'\r\n                                />\r\n                                <h2 className='details__title'></h2>\r\n                                <h3 className='details__subtitle'></h3>\r\n                                <div className='details__price'></div>\r\n                                <p className='details__description'></p>\r\n                                {product.stock === 0 ? (\r\n                                    <button\r\n                                        className='details__addtocart atc-button'\r\n                                        id='atc-button'\r\n                                    >\r\n                                        <span>SOLD OUT :(</span>\r\n                                    </button>\r\n                                ) : (\r\n                                    <>\r\n                                        {product.options &&\r\n                                        product.options.length !== 0 ? (\r\n                                            <>\r\n                                                <div className='dropdown'>\r\n                                                    <div\r\n                                                        className='dropdown-name'\r\n                                                        onClick={() => {\r\n                                                            document.getElementById(\r\n                                                                \"dropdown-content\"\r\n                                                            )!.style.display =\r\n                                                                \"block\";\r\n                                                        }}\r\n                                                    >\r\n                                                        {option.name ? (\r\n                                                            <span>\r\n                                                                {option.name}\r\n                                                            </span>\r\n                                                        ) : (\r\n                                                            <>SELECT OPTION</>\r\n                                                        )}\r\n                                                    </div>\r\n\r\n                                                    <div\r\n                                                        className='dropdown-content'\r\n                                                        id='dropdown-content'\r\n                                                    >\r\n                                                        {product.options.map(\r\n                                                            option => {\r\n                                                                return (\r\n                                                                    <li\r\n                                                                        key={nanoid()}\r\n                                                                        onClick={() => {\r\n                                                                            setOption(\r\n                                                                                {\r\n                                                                                    name: option.name,\r\n                                                                                    option_id:\r\n                                                                                        option.option_id,\r\n                                                                                    option_price:\r\n                                                                                        option.price,\r\n                                                                                    option_stock:\r\n                                                                                        option.stock,\r\n                                                                                }\r\n                                                                            );\r\n\r\n                                                                            document\r\n                                                                                .getElementById(\r\n                                                                                    \"add-cart-btn\"\r\n                                                                                )!\r\n                                                                                .classList.remove(\r\n                                                                                    \"disabled\"\r\n                                                                                );\r\n\r\n                                                                            document.getElementById(\r\n                                                                                \"dropdown-content\"\r\n                                                                            )!.style.display =\r\n                                                                                \"none\";\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <div>\r\n                                                                            {\r\n                                                                                option.name\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    </li>\r\n                                                                );\r\n                                                            }\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <button\r\n                                                    className='details__addtocart atc-button disabled'\r\n                                                    id='atc-button'\r\n                                                    onClick={() => {\r\n                                                        if (!!option) {\r\n                                                            let tmp: any =\r\n                                                                product;\r\n                                                            tmp.option =\r\n                                                                option.name;\r\n                                                            tmp.option_id =\r\n                                                                option.option_id;\r\n                                                            tmp.option_price =\r\n                                                                option.option_price;\r\n                                                            dispatch(\r\n                                                                addProductToCart(\r\n                                                                    tmp\r\n                                                                )\r\n                                                            );\r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <span>Add to cart</span>\r\n                                                    <div className='cart'>\r\n                                                        <svg viewBox='0 0 36 26'>\r\n                                                            <polyline points='1 2.5 6 2.5 10 18.5 25.5 18.5 28.5 7.5 7.5 7.5'></polyline>\r\n                                                            <polyline points='15 13.5 17 15.5 22 10.5'></polyline>\r\n                                                        </svg>\r\n                                                    </div>\r\n                                                </button>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <button\r\n                                                    className='details__addtocart atc-button'\r\n                                                    id='atc-button'\r\n                                                    onClick={() => {\r\n                                                        if (!!option) {\r\n                                                            let tmp: any =\r\n                                                                product;\r\n                                                            tmp.option =\r\n                                                                option.name;\r\n                                                            tmp.option_id =\r\n                                                                option.option_id;\r\n                                                            tmp.option_price =\r\n                                                                option.option_price;\r\n                                                            dispatch(\r\n                                                                addProductToCart(\r\n                                                                    tmp\r\n                                                                )\r\n                                                            );\r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <span>Add to cart</span>\r\n                                                    <div className='cart'>\r\n                                                        <svg viewBox='0 0 36 26'>\r\n                                                            <polyline points='1 2.5 6 2.5 10 18.5 25.5 18.5 28.5 7.5 7.5 7.5'></polyline>\r\n                                                            <polyline points='15 13.5 17 15.5 22 10.5'></polyline>\r\n                                                        </svg>\r\n                                                    </div>\r\n                                                </button>\r\n                                            </>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                                <button className='details__close'>\r\n                                    <svg\r\n                                        width='24'\r\n                                        height='24'\r\n                                        viewBox='0 0 24 24'\r\n                                        fill='none'\r\n                                        xmlns='http://www.w3.org/2000/svg'\r\n                                    >\r\n                                        <path\r\n                                            d='M6.2253 4.81108C5.83477 4.42056 5.20161 4.42056 4.81108 4.81108C4.42056 5.20161 4.42056 5.83477 4.81108 6.2253L10.5858 12L4.81114 17.7747C4.42062 18.1652 4.42062 18.7984 4.81114 19.1889C5.20167 19.5794 5.83483 19.5794 6.22535 19.1889L12 13.4142L17.7747 19.1889C18.1652 19.5794 18.7984 19.5794 19.1889 19.1889C19.5794 18.7984 19.5794 18.1652 19.1889 17.7747L13.4142 12L19.189 6.2253C19.5795 5.83477 19.5795 5.20161 19.189 4.81108C18.7985 4.42056 18.1653 4.42056 17.7748 4.81108L12 10.5858L6.2253 4.81108Z'\r\n                                            fill='currentColor'\r\n                                        />\r\n                                    </svg>\r\n                                </button>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}