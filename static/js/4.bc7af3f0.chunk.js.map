{"version":3,"sources":["../node_modules/nanoid/index.browser.js","redux/actions/userAction.ts","components/cart/DeleteButton.tsx","components/cart/Cart.tsx"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","addProductToCart","product","type","resetCart","changeQuantityOnProduct","newQuantity","productIndex","DeleteButton","onClick","e","document","getElementById","span","classList","contains","add","innerText","onMouseOut","setTimeout","remove","className","icon","faTrash","faQuestion","faCheck","Cart","products","useSelector","state","productsInCart","product_ids","dispatch","useDispatch","useState","total","setTotal","refresh","quantities","setState","i","length","tmp","j","product_id","push","products_str","JSON","stringify","useGetProductsByIdsQuery","variables","data","loading","error","useEffect","tmp_total","option","option_price","quantity","price","style","display","justifyContent","fontWeight","marginLeft","width","borderBottom","textAlign","color","href","marginBottom","getProductsByIds","options","ii","option_id","stock","name","Number","toFixed","map","key","alt","src","images","img_url","value","minLength","maxLength","pattern","onBlur","console","log","target","splice","anime","duration","targets","easing","opacity","complete","onChange","match","foo","z","border","height"],"mappings":"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","file":"static/js/4.bc7af3f0.chunk.js","sourcesContent":["// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { Product } from \"../RootReducer\";\r\n\r\nexport const addProductToCart = (product: Product) => {\r\n    return {\r\n        type: \"ADD_PRODUCT_TO_CART\",\r\n        product,\r\n    };\r\n};\r\n\r\nexport const resetCart = () => {\r\n    return { type: \"RESET_CART\" };\r\n};\r\n\r\nexport const changeQuantityOnProduct = (\r\n    newQuantity: number,\r\n    productIndex: number\r\n) => {\r\n    return { type: \"CHANGE_QUANTITY_ON_PRODUCT\", newQuantity, productIndex };\r\n};\r\n","import {\r\n    faCheck,\r\n    faQuestion,\r\n    faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst DeleteButton = () => {\r\n    return (\r\n        <div\r\n            id='cart-delete-btn'\r\n            onClick={() => {\r\n                const e = document.getElementById(\"cart-delete-btn\")!;\r\n                const span = document.getElementById(\"delete-span\")!;\r\n                if (e.classList.contains(\"confirm\")) {\r\n                    e.classList.add(\"done\");\r\n                    span.innerText = \"Are you sure?\";\r\n                } else {\r\n                    e.classList.add(\"confirm\");\r\n                    span.innerText = \"Are you sure?\";\r\n                }\r\n            }}\r\n            onMouseOut={() => {\r\n                const e = document.getElementById(\"cart-delete-btn\")!;\r\n                const span = document.getElementById(\"delete-span\")!;\r\n\r\n                if (\r\n                    e.classList.contains(\"confirm\") ||\r\n                    e.classList.contains(\"done\")\r\n                ) {\r\n                    setTimeout(() => {\r\n                        e.classList.remove(\"confirm\");\r\n                        e.classList.remove(\"done\");\r\n                        span.innerText = \"Delete\";\r\n                    }, 8000);\r\n                }\r\n            }}\r\n        >\r\n            <div className='icon'>\r\n                <FontAwesomeIcon className='fa' icon={faTrash} />\r\n                <FontAwesomeIcon className='fa fa-question' icon={faQuestion} />\r\n                <FontAwesomeIcon className='fa fa-check' icon={faCheck} />\r\n            </div>\r\n            <div className='text'>\r\n                <span id='delete-span'>Delete</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import { useGetProductsByIdsQuery } from \"generated/graphql\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeQuantityOnProduct, resetCart } from \"redux/actions/userAction\";\r\nimport \"css/cart.scss\";\r\nimport { nanoid } from \"nanoid\";\r\nimport anime from \"animejs\";\r\nimport DeleteButton from \"./DeleteButton\";\r\n\r\nconst Cart = () => {\r\n    const products = useSelector((state: any) => state.productsInCart) || [],\r\n        product_ids: number[] = [],\r\n        dispatch = useDispatch(),\r\n        [total, setTotal] = useState(0),\r\n        [state, setState] = useState({\r\n            refresh: false,\r\n            quantities: [],\r\n        });\r\n\r\n    for (let i = 0; i < products.length; i++) {\r\n        let tmp = true;\r\n\r\n        for (let j = 0; j < product_ids.length; j++) {\r\n            if (product_ids[j] === products[i].product_id) {\r\n                tmp = false;\r\n            }\r\n        }\r\n\r\n        if (tmp) {\r\n            product_ids.push(products[i].product_id);\r\n        }\r\n    }\r\n\r\n    const products_str = JSON.stringify(product_ids);\r\n\r\n    const { data, loading, error } = useGetProductsByIdsQuery({\r\n        variables: {\r\n            products_str,\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!!products) {\r\n            var tmp_total = 0;\r\n            for (let i = 0; i < products.length; i++) {\r\n                let product = products[i];\r\n                if (!product.option || product.option.length === 0) {\r\n                    if (state.quantities[i]) {\r\n                        tmp_total += products[i].price * state.quantities[i];\r\n                    } else {\r\n                        tmp_total += products[i].price * products[i].quantity;\r\n                    }\r\n                } else {\r\n                    if (state.quantities[i]) {\r\n                        tmp_total +=\r\n                            products[i].option_price * state.quantities[i];\r\n                    } else {\r\n                        tmp_total +=\r\n                            products[i].option_price * products[i].quantity;\r\n                    }\r\n                }\r\n            }\r\n\r\n            setTotal(tmp_total);\r\n            // setState({ ...state, refresh: !state.refresh });\r\n        }\r\n    });\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n\r\n    if (!!error) {\r\n        dispatch(resetCart());\r\n\r\n        return (\r\n            <div>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <h2 style={{ fontWeight: 550 }}>\r\n                        OOPS! This is embarrasing ⊙_⊙{\" \"}\r\n                    </h2>\r\n                </div>\r\n\r\n                <div\r\n                    style={{\r\n                        marginLeft: \"5%\",\r\n                        width: \"85%\",\r\n                        borderBottom: \" 4px solid #ff0000\",\r\n                    }}\r\n                ></div>\r\n\r\n                <h2 style={{ textAlign: \"center\" }}>An error occured</h2>\r\n\r\n                <p style={{ textAlign: \"center\" }}>\r\n                    <strong style={{ color: \"#ff0000\" }}>-</strong> Please try\r\n                    again later. If error persist contact us via instagram or\r\n                    email.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!products || products.length === 0) {\r\n        return (\r\n            <div>\r\n                <h3 style={{ textAlign: \"center\" }}>\r\n                    Your Shopping Cart Is Empty!\r\n                </h3>\r\n\r\n                <a href='#/products'>\r\n                    <h4 style={{ textAlign: \"center\", marginBottom: \"16px\" }}>\r\n                        Click me to start shopping ʕ ◕ᴥ◕ ʔ\r\n                    </h4>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!!data) {\r\n        for (let i = 0; i < products.length; i++) {\r\n            // cart item validation\r\n            for (let j = 0; j < data.getProductsByIds.length; j++) {\r\n                if (\r\n                    products[i].product_id ===\r\n                    data.getProductsByIds[j].product_id\r\n                ) {\r\n                    if (!products[i].option) {\r\n                        if (\r\n                            products[i].quantity >\r\n                            data.getProductsByIds[j].stock\r\n                        ) {\r\n                            // edit the item\r\n                            products[i].name = data.getProductsByIds[j].name;\r\n                            products[i].price = data.getProductsByIds[j].price;\r\n                            products[i].quantity =\r\n                                data.getProductsByIds[j].stock;\r\n                            dispatch(\r\n                                changeQuantityOnProduct(\r\n                                    data.getProductsByIds[j].stock,\r\n                                    i\r\n                                )\r\n                            );\r\n                        }\r\n                    } else {\r\n                        if (\r\n                            !!data.getProductsByIds[j] &&\r\n                            !!data.getProductsByIds[j].options\r\n                        ) {\r\n                            for (\r\n                                let ii = 0;\r\n                                ii < data.getProductsByIds[j].options!.length;\r\n                                ii++\r\n                            ) {\r\n                                if (\r\n                                    products[i].option_id ===\r\n                                    data.getProductsByIds[j].options![ii]\r\n                                        .option_id\r\n                                ) {\r\n                                    //check stock\r\n                                    if (\r\n                                        products[i].quantity >\r\n                                        data.getProductsByIds[j].options![ii]\r\n                                            .stock\r\n                                    ) {\r\n                                        dispatch(\r\n                                            changeQuantityOnProduct(\r\n                                                data.getProductsByIds[j]\r\n                                                    .options![ii].stock,\r\n                                                i\r\n                                            )\r\n                                        );\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{ textAlign: \"center\" }}>Cart</h1>\r\n            <p style={{ textAlign: \"center\" }}>\r\n                Subtotal(${Number(total / 100).toFixed(2)})\r\n            </p>\r\n\r\n            <div\r\n                style={{\r\n                    width: \" 70%\",\r\n                    marginLeft: \"15%\",\r\n                    marginBottom: \"20px\",\r\n                    borderBottom: \"4px solid #eb8ab6\",\r\n                }}\r\n            ></div>\r\n\r\n            <>\r\n                {products.map((product: any, i: number) => {\r\n                    const key = nanoid();\r\n\r\n                    return (\r\n                        <div className='product-container'>\r\n                            <div\r\n                                id={`product-${key}`}\r\n                                key={key}\r\n                                className={`cart-product product-${key}`}\r\n                            >\r\n                                <span>\r\n                                    <img\r\n                                        className='product-image'\r\n                                        alt='product'\r\n                                        src={product.images[0].img_url}\r\n                                    />\r\n                                </span>\r\n\r\n                                <span style={{ textAlign: \"center\" }}>\r\n                                    <h5 className='product-name'>\r\n                                        {product.name}{\" \"}\r\n                                        <span className='show-on-small'>\r\n                                            $\r\n                                            {!product.option_price ? (\r\n                                                <>\r\n                                                    {Number(\r\n                                                        products.price / 100\r\n                                                    ).toFixed(2)}\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    {Number(\r\n                                                        product.option_price /\r\n                                                            100\r\n                                                    ).toFixed(2)}\r\n                                                </>\r\n                                            )}\r\n                                        </span>{\" \"}\r\n                                        {!products[i].option ? (\r\n                                            <></>\r\n                                        ) : (\r\n                                            <span\r\n                                                style={{ fontWeight: \"bold\" }}\r\n                                            >\r\n                                                ({products[i].option})\r\n                                            </span>\r\n                                        )}\r\n                                    </h5>\r\n                                </span>\r\n\r\n                                <span>\r\n                                    <input\r\n                                        type='text'\r\n                                        value={\r\n                                            state.quantities[i] ||\r\n                                            state.quantities[i] === 0\r\n                                                ? state.quantities[i]\r\n                                                : products[i].quantity\r\n                                        }\r\n                                        minLength={0}\r\n                                        maxLength={2}\r\n                                        pattern='\\D'\r\n                                        onBlur={e => {\r\n                                            console.log(\"blured\");\r\n                                            dispatch(\r\n                                                changeQuantityOnProduct(\r\n                                                    Number(e.target.value),\r\n                                                    i\r\n                                                )\r\n                                            );\r\n\r\n                                            if (e.target.value === \"0\") {\r\n                                                let tmp = state.quantities;\r\n                                                tmp.splice(i, 1);\r\n\r\n                                                anime({\r\n                                                    duration: 400,\r\n                                                    targets: `.product-${i}`,\r\n                                                    easing: \"easeOutExpo\",\r\n                                                    opacity: {\r\n                                                        value: [1, 0],\r\n                                                        easing: \"linear\",\r\n                                                    },\r\n                                                    complete: function () {\r\n                                                        setState({\r\n                                                            ...state,\r\n                                                            quantities: tmp,\r\n                                                            refresh:\r\n                                                                !state.refresh,\r\n                                                        });\r\n                                                        if (\r\n                                                            !!document.getElementById(\r\n                                                                `product-${i}`\r\n                                                            )\r\n                                                        ) {\r\n                                                            document.getElementById(\r\n                                                                `product-${i}`\r\n                                                            )!.style.opacity =\r\n                                                                \"1\";\r\n                                                        }\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        onChange={e => {\r\n                                            let tmp: any = state.quantities;\r\n\r\n                                            if (!e.target.value) {\r\n                                                tmp[i] = 0;\r\n                                                setState({\r\n                                                    ...state,\r\n                                                    quantities: tmp,\r\n                                                });\r\n                                            }\r\n\r\n                                            if (e.target.value.match(/\\d/g)) {\r\n                                                //check if value is less than stock\r\n                                                let foo = true;\r\n                                                for (\r\n                                                    let j = 0;\r\n                                                    j <\r\n                                                    data!.getProductsByIds\r\n                                                        .length;\r\n                                                    j++\r\n                                                ) {\r\n                                                    if (\r\n                                                        data?.getProductsByIds[\r\n                                                            j\r\n                                                        ].options\r\n                                                    ) {\r\n                                                        if (\r\n                                                            data\r\n                                                                ?.getProductsByIds[\r\n                                                                j\r\n                                                            ].product_id ===\r\n                                                            products[i]\r\n                                                                .product_id\r\n                                                        ) {\r\n                                                            for (\r\n                                                                let z = 0;\r\n                                                                z <\r\n                                                                data\r\n                                                                    ?.getProductsByIds[\r\n                                                                    j\r\n                                                                ].options!\r\n                                                                    .length;\r\n                                                                z++\r\n                                                            ) {\r\n                                                                if (\r\n                                                                    products[i]\r\n                                                                        .option_id ===\r\n                                                                    data\r\n                                                                        ?.getProductsByIds[\r\n                                                                        j\r\n                                                                    ].options![\r\n                                                                        z\r\n                                                                    ].option_id\r\n                                                                ) {\r\n                                                                    if (\r\n                                                                        Number(\r\n                                                                            e\r\n                                                                                .target\r\n                                                                                .value\r\n                                                                        ) >\r\n                                                                        data\r\n                                                                            ?.getProductsByIds[\r\n                                                                            j\r\n                                                                        ]\r\n                                                                            .options![\r\n                                                                            z\r\n                                                                        ].stock\r\n                                                                    ) {\r\n                                                                        foo =\r\n                                                                            false;\r\n                                                                        tmp[i] =\r\n                                                                            Number(\r\n                                                                                data\r\n                                                                                    ?.getProductsByIds[\r\n                                                                                    j\r\n                                                                                ]\r\n                                                                                    .options![\r\n                                                                                    z\r\n                                                                                ]\r\n                                                                                    .stock\r\n                                                                            );\r\n                                                                        setState(\r\n                                                                            {\r\n                                                                                ...state,\r\n                                                                                quantities:\r\n                                                                                    tmp,\r\n                                                                            }\r\n                                                                        );\r\n                                                                        break;\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n\r\n                                                if (foo) {\r\n                                                    tmp[i] = Number(\r\n                                                        e.target.value\r\n                                                    );\r\n                                                    setState({\r\n                                                        ...state,\r\n                                                        quantities: tmp,\r\n                                                    });\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                        style={{\r\n                                            textAlign: \"center\",\r\n                                            border: \"1px solid #000\",\r\n                                            height: \"56px\",\r\n                                            width: \"56px\",\r\n                                        }}\r\n                                    />\r\n                                </span>\r\n\r\n                                <span className='hide-on-small'>\r\n                                    {/* $\r\n                                    {!products[i].option_price ? (\r\n                                        <span>\r\n                                            {Number(\r\n                                                products[i].price / 100\r\n                                            ).toFixed(2)}\r\n                                        </span>\r\n                                    ) : (\r\n                                        <span>\r\n                                            {Number(\r\n                                                products[i].option_price / 100\r\n                                            ).toFixed(2)}\r\n                                        </span>\r\n                                    )} */}\r\n                                    <DeleteButton />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n\r\n                <div\r\n                    style={{\r\n                        width: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        marginBottom: \"40px\",\r\n                    }}\r\n                >\r\n                    <a className='checkout-btn' href='#/checkout'>\r\n                        checkout\r\n                    </a>\r\n                </div>\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n"],"sourceRoot":""}