{"version":3,"sources":["components/orders/UsersOrders.tsx","Sorting.ts"],"names":["UsersOrders","sortByProp","arr","prop","invert","props","forEach","_val","i","sort","reverse","length","j","tmp","slice","pop","useGetUsersOrdersQuery","data","loading","error","getUsersOrders"],"mappings":"wIAyDeA,UAtDK,WAChB,IAAQC,ECmCD,CACHA,WAvCe,SAACC,EAAUC,EAAcC,GACxC,IAAIC,EAAQ,GACZH,EAAII,SAAQ,SAACC,EAAWC,GACpBH,EAAMG,GAAKN,EAAIM,GAAGL,MAGtBE,EAAMI,OACFL,GACAC,EAAMK,UAGV,IAAK,IAAIF,EAAI,EAAGA,EAAIN,EAAIS,OAAQH,IAE5B,IADA,IAAII,EAAIJ,EACDN,EAAIM,GAAGL,KAAUE,EAAMG,IAAI,CAC9B,IAAIK,EAAMX,EAAIY,MAAMF,EAAGA,EAAI,GAC3BC,EAAIH,UACJR,EAAIU,GAAKC,EAAI,GACbX,EAAIU,EAAI,GAAKC,EAAI,IACjBD,GAAQ,KAEEV,EAAIS,OAAS,IACnBC,EAAIJ,GAGHN,EAAIA,EAAIS,OAAS,IAElBT,EAAIa,MAKhB,OAGWb,ID/BPD,WACR,EAAiCe,cAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MAEvB,GAAID,EACA,OAAO,6BAGX,GAAIC,EACA,OAAO,6BAGX,IAAKF,EACD,OAAO,sDAGsBhB,EAC7BgB,EAAKG,eACL,YACA,GAGJ,OAAO","file":"static/js/8.b23f1c2a.chunk.js","sourcesContent":["import { useGetUsersOrdersQuery } from \"generated/graphql\";\r\nimport { Sorting } from \"Sorting\";\r\n\r\nconst UsersOrders = () => {\r\n    const { sortByProp } = Sorting();\r\n    const { data, loading, error } = useGetUsersOrdersQuery();\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n\r\n    if (error) {\r\n        return <></>;\r\n    }\r\n\r\n    if (!data) {\r\n        return <>WOW such Empty</>;\r\n    }\r\n\r\n    let sortedOrders: [UserOrders] = sortByProp(\r\n        data.getUsersOrders,\r\n        \"order_id\",\r\n        true\r\n    );\r\n\r\n    return <div></div>;\r\n};\r\n\r\ninterface UserOrders {\r\n    products: [\r\n        {\r\n            product_id: number;\r\n            name: string;\r\n            desc: string;\r\n            price: number;\r\n            stock: number;\r\n            exp_date?: string;\r\n            quantityOrdered: number;\r\n            productSubtotal: number;\r\n            images: [\r\n                {\r\n                    img_id: number;\r\n                    img_url: string;\r\n                    index: number;\r\n                }\r\n            ];\r\n        }\r\n    ];\r\n    shipping: string;\r\n    order_total: number;\r\n    order_id: number;\r\n    tracking_num?: string;\r\n    coupon: string;\r\n    discount: string;\r\n    date_of_purchase: string;\r\n}\r\n\r\nexport default UsersOrders;\r\n","export const Sorting = () => {\r\n    const sortByProp = (arr: any, prop: string, invert?: boolean) => {\r\n        let props = [] as any[];\r\n        arr.forEach((_val: any, i: any) => {\r\n            props[i] = arr[i][prop];\r\n        });\r\n\r\n        props.sort();\r\n        if (invert) {\r\n            props.reverse();\r\n        }\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let j = i;\r\n            while (arr[i][prop] !== props[i]) {\r\n                let tmp = arr.slice(j, j + 2);\r\n                tmp.reverse();\r\n                arr[j] = tmp[0];\r\n                arr[j + 1] = tmp[1];\r\n                j = j + 1;\r\n\r\n                if (j === arr.length - 1) {\r\n                    j = i;\r\n                }\r\n\r\n                if (!arr[arr.length - 1]) {\r\n                    // remove undef index sometimes introduced by tmp.reverse()\r\n                    arr.pop();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!invert) {\r\n            return arr;\r\n        } else {\r\n            return arr;\r\n        }\r\n    };\r\n\r\n    return {\r\n        sortByProp,\r\n    };\r\n};\r\n"],"sourceRoot":""}